bt_navigator:
  ros__parameters:
    use_sim_time: true

    # No-replan BTs
    default_nav_to_pose_bt_xml: "/workspaces/ros2_scratch/src/construction/config/navigate_to_pose_no_replan.xml"
    default_nav_through_poses_bt_xml: "/workspaces/ros2_scratch/src/construction//config/navigate_through_poses_no_replan.xml"

    enable_stuck_detector: true
    wait_for_service_timeout: 2000

    # Behavior Tree plugin libraries (Humble)
    plugin_lib_names:
      - nav2_compute_path_to_pose_action_bt_node
      - nav2_compute_path_through_poses_action_bt_node
      - nav2_follow_path_action_bt_node
      - nav2_goal_reached_condition_bt_node
      - nav2_clear_costmap_service_bt_node # <-- provides ClearEntirelyCostmap / ClearCostmap
      - nav2_spin_action_bt_node
      - nav2_wait_action_bt_node
      - nav2_rate_controller_bt_node
      - nav2_recovery_node_bt_node
      - nav2_round_robin_node_bt_node
      - nav2_pipeline_sequence_bt_node

controller_server:
  ros__parameters:
    use_sim_time: true
    controller_frequency: 20.0
    min_x_velocity_threshold: 0.001
    min_theta_velocity_threshold: 0.001

    progress_checker_plugin: "progress_checker"
    goal_checker_plugins: ["general_goal_checker"]
    controller_plugins: ["FollowPath"]

    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.0
      movement_time_allowance: 3600.0

    general_goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.03
      yaw_goal_tolerance: 0.03
      stateful: false

    FollowPath:
      plugin: "nav2_regulated_pure_pursuit_controller::RegulatedPurePursuitController"
      desired_linear_vel: 0.22
      lookahead_dist: 0.40
      min_lookahead_dist: 0.20
      use_velocity_scaled_lookahead_dist: true
      rotate_to_heading_angular_vel: 1.0
      allow_reversing: false
      use_rotate_to_heading: true
      transform_tolerance: 0.2
      use_collision_detection: true
      max_allowed_time_to_collision_up_to_carrot: 1.0
      use_cost_regulated_linear_velocity_scaling: true
      regulated_linear_scaling_min_radius: 0.9
      regulated_linear_scaling_min_speed: 0.05
      use_regulated_turning: true

planner_server:
  ros__parameters:
    use_sim_time: true
    expected_planner_frequency: 1.0
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_navfn_planner/NavfnPlanner"
      tolerance: 0.0
      use_astar: false
      allow_unknown: true

behavior_server:
  ros__parameters:
    use_sim_time: true

smoother_server:
  ros__parameters:
    use_sim_time: true

waypoint_follower:
  ros__parameters:
    use_sim_time: true

velocity_smoother:
  ros__parameters:
    use_sim_time: true

# Local costmap (for obstacle stop)
local_costmap:
  local_costmap:
    ros__parameters:
      use_sim_time: true
      update_frequency: 10.0
      publish_frequency: 5.0
      global_frame: odom
      robot_base_frame: base_link
      rolling_window: true
      width: 6
      height: 6
      resolution: 0.05

      robot_radius: 0.105
      footprint_clearing_enabled: true
      always_send_full_costmap: true

      plugins: [obstacle_layer, inflation_layer]

      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        combination_method: 1
        track_unknown_space: false
        observation_sources: scan
        scan:
          topic: /scan
          data_type: LaserScan
          clearing: true
          marking: true
          obstacle_range: 2.5
          raytrace_range: 3.0
          observation_persistence: 0.0 # <- no stale memory
          expected_update_rate: 0.0
          min_obstacle_height: 0.0
          max_obstacle_height: 1.0
          inf_is_valid: true # <- use max-range to clear

      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        inflation_radius: 0.35
        cost_scaling_factor: 3.0

# Minimal global costmap (no map server). Rolling window, no obstacle layer.
global_costmap:
  global_costmap:
    ros__parameters:
      use_sim_time: true
      update_frequency: 1.0
      publish_frequency: 1.0
      global_frame: map
      robot_base_frame: base_link
      rolling_window: true
